// Метод map()
// Метод map(callback) используется для трансформации массива.Он
// вызывает коллбек - функцию для каждого элемента исходного массива,
// а результат её работы записывает в новый массив, который
// и будет результатом выполнения метода.

// массив.map((element, index, array) => {
// // Тело коллбек-функции
// });

// - Поэлементно перебирает оригинальный массив.
// - Не изменяет оригинальный массив.
// - Результат работа коллбек-функции записывается в новый массив.
// - Возвращает новый массив такой же длины.

// Его можно использовать для того, чтобы изменить каждый элемент массива.
//  Оригинальный массив используется как эталон, на базе которого можно
//  сделать другую коллекцию.

// const planets = ['Земля', 'Марс', 'Венера', 'Юпитер'];

// const planetsInUpperCase = planets.map(planet => planet.toUpperCase());
// console.log(planetsInUpperCase);

// const planetsInLowerCase  = planets.map(planet => planet.toLowerCase());
// console.log(planetsInLowerCase);
// // Оригинальный массив не изменился
// console.log(planets);

// Использование анонимных стрелочных функций с неявным возвратом сильно
// сокращает «шум» объявления коллбек - функции, делая код чище и проще
//  для восприятия.

// ======================================================================

// Массив объектов.

// Мы уже знаем что повседневная задача это манипуляция массивом объектов.
// Например, получить массив значений свойства из всех объектов.Есть
// массив студентов, а нужно получить отдельный массив их имён.

// const students = [
//     { name: "Манго", score: 83 },
//     { name: "Поли", score: 59 },
//     { name: "Аякс", score: 37 },
//     { name: "Киви", score: 94 },
//     { name: "Хьюстон", score: 64 },

// ];

// const name = students.map(student => student.name);
// console.log(students);

// Используя метод map() можно перебрать массив объектов, и в коллбек-функции 
// вернуть значение свойства каждого из них.