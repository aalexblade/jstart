// Контекст выполнения функции

// Можно с уверенностью сказать, что ключевое слово this это одна из самых
// запутанных концепций JavaScript на старте обучения.Новички часто
//  подставляют this методом научного тыка до тех пор, пока скрипт не
// сработает.

// Контекст в JavaScript похож на контекст в предложении:

// Петя бежит быстро, потому что Петя пытается поймать поезд.
// Петя бежит быстро, потому что он пытается поймать поезд.
// Второе предложение звучит лаконичнее.Предметом предложения является
// Петя и мы можем сказать, что контекст предложения - это Петя, потому
//  что он в центре внимания в это конкретное время в предложении.Даже
// местоимение «кто» относится к Пете.

// И точно так же объект может быть текущим контекстом исполнения функции.

// // Петя бежит быстро, потому что Петя пытается поймать поезд.

// const petya = {
//   username: "Petya",
//   showName() {
//     console.log(petya.username);
//   },
// };

// petya.showName();

// Обращение к свойствам объекта внутри методов, используя имя самого
// объекта, аналогично использованию Петя вместо он.

// Внутри функций можно использовать зарезервированное ключевое слово this.
//  Во время исполнения функции, в this записывается ссылка на объект, в
//  контексте которого она была вызвана.Таким образом, в теле функции мы
//  можем получить доступ к свойствам и методам этого объекта.

// // Петя бежит быстро, потому что он (this) пытается поймать поезд.
// const petya = {
//   username: "Petya",
//   showName() {
//     console.log(this.username);
//   },
// };

// petya.showName();

// Разберем пример с коллекцией книг.

// const bookShelf = {
//     authors: ["Бернард Корнуэлл", "Роберт Шекли"],
//     gerAutors() {
//         return this.authors;
//     },   
   
//     addAuthors(authorName) {
//         this.authors.push(authorName);
//     },
// };

// console.log(bookShelf.gerAutors());
// bookShelf.addAuthors("Ли Танит");
// console.log(bookShelf.gerAutors());

// Методы getAuthors и addAuthor это функции(методы объекта), которые
//  вызываются в контексте объекта bookShelf.Во время их выполнения 
//  в this записывается ссылка на объект bookShelf и мы можем обратиться 
//  к его свойствам и методам.